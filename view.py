from PyQt5 import QtCore
from PyQt5.QtWidgets import QApplication, QMainWindow
from Ui_interface import Ui_MainWindow
from controller import Controller
from model import Model
import sys

# file that conceptually represents the view; the MainWindow class performs 
# the setup of the UI generated by Qt designer, adds a widget representing 
# the controller and passes a model class.

class MainWindow(QMainWindow):

    def __init__(self, model):
        super().__init__()

        self.ui = Ui_MainWindow()
        self.ui.setupUi(self)


        self.controller = Controller(model, self.ui.display)
        self.controller.setFixedWidth(575)
        self.controller.setFixedHeight(400)
        self.layout().addWidget(self.controller)

        # connection of ui events to class functions
        
        self.ui.playButton.clicked.connect(self.playButtonTransition)
        self.ui.fpsSelector.currentIndexChanged.connect(self.setFramerate)
        self.ui.clearButton.clicked.connect(self.clearBoard)
        self.ui.verticalSlider.setTracking(True)
        self.ui.verticalSlider.valueChanged.connect(self.setZoom)
        self.ui.historyCheck.stateChanged.connect(self.setHistory)


    # change text in the play button and trigger the play function on controller
   
    def playButtonTransition(self):

        self.controller.play()
        if self.ui.playButton.text() == 'Play':
            self.ui.playButton.setText('Pause')
        else:
            self.ui.playButton.setText('Play') 
            
    # reset text in the play button and trigger the clear function on controller
    
    def clearBoard(self):

        self.controller.clear()
        self.ui.playButton.setText('Play')
        
    # gets fps value from the comboBox and sets it in the controller
    
    def setFramerate(self):

        fpsValue = self.ui.fpsSelector.currentText()
        self.controller.setFramerate(fpsValue)


    # gets vslider values and passes them to a controller function that 
    # uses them to zoom
    
    def setZoom(self):

        self.controller.zoomAdjust(100 - self.ui.verticalSlider.value())

    def setHistory(self, state):

        if state == QtCore.Qt.Checked:
            self.controller.setHistoryMode(True)
        else:
            self.controller.setHistoryMode(False)


# main code which instantiates a model, a mainwindow and starts the application

if __name__ == '__main__':

    app = QApplication(sys.argv)
    sshFile = "Aqua.qss"
    with open(sshFile, "r") as fh:
        app.setStyleSheet(fh.read())
    model = Model()
    w = MainWindow(model)
    w.show()
    sys.exit(app.exec_())
